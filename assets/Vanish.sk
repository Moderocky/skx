options:
	prefix: &f&lVanish &7> 

	#example: "{@prefix} &6playername &aenabled {@modename} &emode"
	modename: &fVanish

	#currently supported languages are Italian and English
	language: english

	#leave it to "true" if you won't that in-vanish players can hit others and vice versa
	nodamage: false

	#leave it to "true" if you want in-vanish players' join message to be hidden
	hide-join: true

	#leave it to "true" if you want in-vanish players' quit message to be hidden
	hide-quit: true

	#leave it to "true" if you want in-vanish players' death message to be hidden
	hide-death: false

	#leave it to "true" if you want in-vanish players to be hidden from the server list
	hide-from-serverlist: true

function testFunc() :: bool:
	loop 3 times:
		send "in func" to console
	return true

function Vanish(p: player, e: player=" self ") :: text:
	set {test2} to "this is a global var test"
	if {@language} is not {test2}:
		set {_xx} to "ths will be returned"
		if {@modename} is not "&fVanish":
			return "WTF"
		return {_xx}
	send {_p} to console
	return "Nope"

function createJsonArray():
	create json array as {_array}
	loop 5 times:
		set {_count} to %loop-value% + 1
		put json value {_count} as %loop-value% in {_array}
	return {_array}

function createJsonObject():
	create json object as {_obj}
	put json value "Liz3" as "name" in {_obj}
	put json value "Holme Nielsen" as "last_name" in {_obj}
	put json value 20 as "age" in {_obj}
	remove json value "last_name" from {_obj}
	return {_obj}

function extractProp(p,prop):
	extract json value "person1" from {_p} to {_person}
	extract json value {_prop} from {_person} to {_value}
	if {_prop} is "age":
		return 21
	return {_value}

on load:
	create json object as {_json}
	set {_obj} to createJsonObject()
	put json value {_obj} as "person1" in {_json}
	put json value {_obj} as "person2" in {_json}
	set {_arr} to createJsonArray()
	put json value {_arr} as "array" in {_json}
	set {_arr} to createJsonArray()
	put json value {_arr} as "array2" in {_json}
	stringify json {_json} to {_asString}
	send {_asString} to console
	#reparse the thing and extract a value
	parse json {_asString} into {_json2}
	set {_nn} to "name"
	set {_ageS} to "age"
	set {_name} to extractProp({_json2}, {_nn})
	set {_age} to extractProp({_json2}, {_ageS})
	if {_name} is "Liz3":
		send {_name} to console
		send {_age} to console
